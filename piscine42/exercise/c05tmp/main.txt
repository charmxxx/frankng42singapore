#include <stdio.h>

int	ft_iterative_factorial(int nb);
int	ft_recursive_factorial(int nb);
int	ft_iterative_power(int nb, int power);
int	ft_recursive_power(int nb, int power);
int	ft_is_prime(int nb);
int	ft_sqrt(int nb);
int	ft_ten_queens_puzzle(void);

int	ft_strstr(char *str, char *key)
{
	while (*str != 0 && *key != 0)
	{
		if (*str == *key)
		{
			str++;
			key++;
		}
		else
			return (0);
	}
	if (*key == 0)
		return (1);
	return (0);
}

int	main(int argc, char *argv[])
{
	int	num, power;

	if (argc < 1)
		return (0);
	if (ft_strstr(argv[1], "fact"))
	{
		sscanf(argv[2], "%d", &num);
		printf("ft_iterative_factorial: %d\n", ft_iterative_factorial(num));
		printf("ft_recursive_factorial: %d\n", ft_recursive_factorial(num));
	}
	else if (ft_strstr(argv[1], "power"))
	{
		sscanf(argv[2], "%d", &num);
		sscanf(argv[3], "%d", &power);
		printf("ft_iterative_power: %d\n", ft_iterative_power(num, power));
		printf("ft_recursive_power: %d\n", ft_recursive_power(num, power));
	}
	else if (ft_strstr(argv[1], "sqrt"))
	{
		sscanf(argv[2], "%d", &num);
		printf("ft_sqrt: %d\n", ft_sqrt(num));
	}
	else if (ft_strstr(argv[1], "prime"))
	{
		sscanf(argv[2], "%d", &num);
		printf("ft_is_prime: %d\n", ft_is_prime(num));
	}
	else if (ft_strstr(argv[1], "queen"))
	{
		printf("ft_ten_queens_puzzle: %d\n", ft_ten_queens_puzzle());
	}
	return (0);
}
